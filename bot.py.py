import requests
import datetime
import logging
from config import TOKEN , open_weather_token
from aiogram import Bot, Dispatcher, executor, types
import markups as nav
import random

#TOKEN = "1858888495:AAGsdLWQ1lZgVxRSW2pza6AwC7l0OGwmws4"

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def command_start(message: types.Message):
    await bot.send_message(message.from_user.id, '–ê—Å—Å–∞–ª–∞–º—É –ê–ª–µ–π–∫—É–º {0.first_name}'.format(message.from_user),reply_markup=nav.mainMenu)


@dp.message_handler()
async def bot_message(message: types.Message):
    #await bot.send_message(message.from_user.id, message.text)
    if message.text == 'üî∏ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
        await bot.send_message(message.from_user.id, '–í–∞—à–µ —á–∏—Å–ª–æ: ' + str(random.randint(1000, 9999)))

    elif message.text == '‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        await bot.send_message(message.from_user.id, '‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=nav.mainMenu)

    elif message.text == '‚û°Ô∏è –î—Ä—É–≥–æ–µ':
        await bot.send_message(message.from_user.id, '‚û°Ô∏è –î—Ä—É–≥–æ–µ', reply_markup=nav.otherMenu)

    elif message.text == 'üìì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
        await bot.send_message(message.from_user.id, ' –Ø –ó—É–±–µ–Ω–∫–æ –ú–∏—Ö–∞–∏–ª –ü–µ—Ç—Ä–æ–≤–∏—á üé© \nüíª DISCORD —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ "–•—ç–Ω–∫–æ–∫#6413"')


    elif message.text == 'üìà –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç':
        await bot.send_message(message.from_user.id, '–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç')

    elif message.text == '‚åö –í—Ä–µ–º—è –Ω–∞–º–∞–∑–∞':
        await bot.send_message(message.from_user.id, '–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚öôÔ∏è')

    else:
        await message.reply('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞')















if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)


















